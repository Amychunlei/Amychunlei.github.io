<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>都市と農村</title>
      <link href="/2021/08/24/new-city/"/>
      <url>/2021/08/24/new-city/</url>
      
        <content type="html"><![CDATA[<h3 id="中国では都市と農村の格差が大きい。日本はどうでしょうか。日本農家の生活は豊か（ゆたか）でしょうか"><a href="#中国では都市と農村の格差が大きい。日本はどうでしょうか。日本農家の生活は豊か（ゆたか）でしょうか" class="headerlink" title="中国では都市と農村の格差が大きい。日本はどうでしょうか。日本農家の生活は豊か（ゆたか）でしょうか"></a>中国では都市と農村の格差が大きい。日本はどうでしょうか。日本農家の生活は豊か（ゆたか）でしょうか</h3><p>日本では農村部と都市部とでは収入の格差はあります。</p><p>しかし、食糧を生産する農家には国や地方自治体の支援があり、一概に農村が貧しい（まずしい）とは言えません。</p><p>農業の専業で生活を維持するのは難しく、サラリーマンなどを兼業する場合が多いです。</p><blockquote><p>在日本，农村和城市之间的收入是有差距的。</p><p>但是生产粮食的农民有国家或者地方自治体的支援，不能一概而论农民是贫穷的。</p><p>以农业为生的人是很难维持生活的，同时兼公司职员的情况比较多</p></blockquote><p><img src="/2021/08/24/new-city/blog\source_posts\new-city\都市と農村の格差.jpg"></p><h3 id="農家の年収はどれくらいですか"><a href="#農家の年収はどれくらいですか" class="headerlink" title="農家の年収はどれくらいですか"></a>農家の年収はどれくらいですか</h3><p>農業は商品価値の高い農作物を作れるかどうかで、年収は数百万から数千万円の差があります。</p><p>組織化した生産によって億単位の売り上げを稼ぐ農家もあります。</p><blockquote><p>根据能否能产出高价值的农产品，农民的收入在百万和数千日元之间的差。</p><p>有组织化生产的农民有以亿单位的收入</p></blockquote><p><img src="/2021/08/24/new-city/Users\xuchu\Documents\個人用\图片\農家の年収.png" alt="農家の年収"></p><h3 id="中国では戸籍は都市戸籍と農村戸籍と別れていますが、日本も同じですか。東京など大都市の戸籍を取るのは難しいのでしょうか"><a href="#中国では戸籍は都市戸籍と農村戸籍と別れていますが、日本も同じですか。東京など大都市の戸籍を取るのは難しいのでしょうか" class="headerlink" title="中国では戸籍は都市戸籍と農村戸籍と別れていますが、日本も同じですか。東京など大都市の戸籍を取るのは難しいのでしょうか"></a>中国では戸籍は都市戸籍と農村戸籍と別れていますが、日本も同じですか。東京など大都市の戸籍を取るのは難しいのでしょうか</h3><p>日本ではそうした制度がないです、どこに戸籍を作るかは自由です。もちろん都市に戸籍を作ることは何の問題もありませんが、都市に戸籍があるからと言って特に生活が有利になることもありません。戸籍を地方に残したまま別の都市に移住地を移すことも全く問題ありません。</p><blockquote><p>日本没有城市和农村户籍之分。户籍的移动是自由的。</p><p>当然，拿到城市户籍没有问题，只是有城市户口并等同于生活便利。</p><p>户籍留在地方移居到别的城市居住是完全没有问题的。</p></blockquote><p><img src="/2021/08/24/new-city/blog\source_posts\new-city\戸籍.jpg" alt="戸籍"></p>]]></content>
      
      
      <categories>
          
          <category> Japan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Japanese culture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地方</title>
      <link href="/2021/08/24/area/"/>
      <url>/2021/08/24/area/</url>
      
        <content type="html"><![CDATA[<h1 id="城市与农村-（都市と農村）"><a href="#城市与农村-（都市と農村）" class="headerlink" title="城市与农村　（都市と農村）"></a>城市与农村　（都市と農村）</h1><h3 id="日本の都市府県とはどのような区分けですか"><a href="#日本の都市府県とはどのような区分けですか" class="headerlink" title="日本の都市府県とはどのような区分けですか"></a>日本の都市府県とはどのような区分けですか</h3><p>都道府県（とどうふけん）は、一番大きな行政単位で、中国の省レベルに相当します。</p><p>都は東京都、道は北海道、府は大阪府と京都府、そして43の県です。</p><blockquote><p>都道府县是日本最大的行政单位，相当于中国的省。</p><p>都是东京都，道是北海道，府是大阪府和京都府，和43个县。</p></blockquote> <img src="/2021/08/24/area/都市府県.jpg"> <h3 id="関東、関西、近畿（きんき）、中国などはどのように分けられているのでしょうか"><a href="#関東、関西、近畿（きんき）、中国などはどのように分けられているのでしょうか" class="headerlink" title="関東、関西、近畿（きんき）、中国などはどのように分けられているのでしょうか"></a>関東、関西、近畿（きんき）、中国などはどのように分けられているのでしょうか</h3><p>これらの地方区域は地理、地形とともに、歴史と文化によって分けられています。基礎（きそ）になっているのは、江戸時代の幕藩体制（ばくはんたいせい）です。</p><p>这些地方是根据地理，地形，历史和文化背景划分的。基于江户时代的幕藩体制划分的</p><img src="/2021/08/24/area/blog\source\_posts\area\kansaikinki.png" style="zoom:80%;"><h3 id="政令指定都市とはどういうものですか"><a href="#政令指定都市とはどういうものですか" class="headerlink" title="政令指定都市とはどういうものですか"></a>政令指定都市とはどういうものですか</h3><p>内閣によって指定される人口50万以上の大都市のことです。</p><p>例えば、北海道の札幌（さっぽろ）、千葉県の千葉市、大阪府の大阪市などで、それぞれの指定都市は、福祉、医療、教育などの面で権限の一部が道、県、府から独立して行われます。</p><blockquote><p>根据内阁，指定50万人口以上的称为政令指定都市。</p><p>例如，北海道的札幌，千叶县的千叶市，大阪府的大阪市等。</p><p>每个指定城市因为福祉，医疗，教育等一部分权限的城市中独立于道，府，县等。</p></blockquote><p><img src="/2021/08/24/area/blog\source_posts\area\政令指定都市.jpg"></p><p><img src="/2021/08/24/area/blog\source_posts\area\政令指定都市2.png"></p>]]></content>
      
      
      <categories>
          
          <category> Japan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Japanese culture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公共のマナー</title>
      <link href="/2021/08/24/manner/"/>
      <url>/2021/08/24/manner/</url>
      
        <content type="html"><![CDATA[<h3 id="日本では路上（ろじょう）で喫煙（きつえん）してはいけないのですか"><a href="#日本では路上（ろじょう）で喫煙（きつえん）してはいけないのですか" class="headerlink" title="日本では路上（ろじょう）で喫煙（きつえん）してはいけないのですか"></a>日本では路上（ろじょう）で喫煙（きつえん）してはいけないのですか</h3><p>人の多い繁華（はんか）などでは、それはマナーは違反です。一部の都市では条例により禁止され、違反すると罰金（ばっきん）がが科（科す　かす）せられることがあります。</p><blockquote><p>在人多的繁华街道吸烟是违反公德的。</p><p>一些城市明文禁止在道路上吸烟，如果有违法条例的话，会罚款的。</p></blockquote><p><img src="/2021/08/24/manner/blog\source_posts\manner\喫煙2.jpg"></p><img src="/2021/08/24/manner/blog\source\_posts\manner\喫煙.jpg"><h3 id="電車やバスの中で携帯電話は使えないのですか"><a href="#電車やバスの中で携帯電話は使えないのですか" class="headerlink" title="電車やバスの中で携帯電話は使えないのですか"></a>電車やバスの中で携帯電話は使えないのですか</h3><p>バスや電車の中で携帯電話で話すことはマナー違反です。特急電車や新幹線などでも車内では呼び出し音をマナー元に設定し、通話するときはいったん乗り物から乗りるか、車両のつなぎ部分に行きましょう。ショートメールは大丈夫です。</p><blockquote><p>在公交或电车上打电话是违反公德的。</p><p>特急电车和新干线等车内手机铃声设置静音模式，接打电话在暂时下车或者在车辆的衔接处通话。</p><p>手机短信接受是可以的。</p></blockquote><p><img src="/2021/08/24/manner/blog\source_posts\manner\ダウンロード.jpg"></p><h3 id="会議中に携帯電話にかかってきたときはどうするのですか"><a href="#会議中に携帯電話にかかってきたときはどうするのですか" class="headerlink" title="会議中に携帯電話にかかってきたときはどうするのですか"></a>会議中に携帯電話にかかってきたときはどうするのですか</h3><p>会議中や得意先との商談中にかかってきても通常はでてはいけません。</p><p>もしそれは妻や夫（おっと）からの電話だったら、特別の事情がない限り、絶対に出てはいけません。</p><p>会議中や商談中に、家庭との普通の会話を携帯電話でしたら、明日は首になるかもしれません。</p><blockquote><p>会议或者和顾客商谈中通常是不能接电话的。</p><p>如果是妻子或者丈夫的电话，没有特别要紧的事情是绝对不能接电话的。</p><p>如果在会议中或者商谈中，接家里打来的电话的话，第二天可能就被炒鱿鱼了</p></blockquote><h3 id="ゴミは路上に捨ててはいけませんか。ゴミ箱がないときはどうしますか"><a href="#ゴミは路上に捨ててはいけませんか。ゴミ箱がないときはどうしますか" class="headerlink" title="ゴミは路上に捨ててはいけませんか。ゴミ箱がないときはどうしますか"></a>ゴミは路上に捨ててはいけませんか。ゴミ箱がないときはどうしますか</h3><p>昔、ゴミは放置しても自然に返りましたが、現在のゴミは自然に腐食（ふしょく）しないプラスチックなどがほとんどなので、みだり（濫り）に捨ててはいけません。ゴミは指定されたところをに捨てましょう。ゴミ箱がないときは家まで持って帰るべきです。</p><blockquote><p>以前，垃圾扔在路上可以返归自然，现在像塑料类的垃圾不能自然腐烂，因此不能胡乱的扔弃。垃圾在指定的地方丢弃。没有垃圾箱的时候带回家处理</p></blockquote><p>![](D:\blog\source_posts\manner\ダウンロード (1).jpg)</p>]]></content>
      
      
      <categories>
          
          <category> Japan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Japanese culture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>薬局</title>
      <link href="/2021/08/24/drugstor/"/>
      <url>/2021/08/24/drugstor/</url>
      
        <content type="html"><![CDATA[<h3 id="日本の街にはどうしてあんなにたくさんのドラッグストアがあるのですか"><a href="#日本の街にはどうしてあんなにたくさんのドラッグストアがあるのですか" class="headerlink" title="日本の街にはどうしてあんなにたくさんのドラッグストアがあるのですか"></a>日本の街にはどうしてあんなにたくさんのドラッグストアがあるのですか</h3><p>ドラッグストアは本来は一般向けの医薬品を販売する店ですが、サプリメントや化粧品、洗剤などの日用品も扱う（あつかう）店で、ディスカウントでたくさんの客を集める大型店が成長し、どこの街にも数軒の店が現れるようになりました</p><blockquote><p>药妆店本来是销售医药品的商店，包括保健药品，化妆品和洗涤剂等日用品，因为廉价出售，因此成长为吸引众多顾客的大型店铺了，如今每条街都有几家店铺。</p></blockquote> <img src="/2021/08/24/drugstor/薬局.jpg" style="zoom:80%;"> <h3 id="薬局はどうして洗剤などの日用品を売っているのですか"><a href="#薬局はどうして洗剤などの日用品を売っているのですか" class="headerlink" title="薬局はどうして洗剤などの日用品を売っているのですか"></a>薬局はどうして洗剤などの日用品を売っているのですか</h3><p>一般医薬品より、化粧品や洗剤などの日用品の方が日常に適よく売れるし、いろいろな品物を置いておくと、お客は目的の物以外もついてに買っていくことがあるので、そうした販売効果も狙っているようです。</p><blockquote><p>一般医药品相比，化妆品和洗涤剂等日常用品更容易贩卖，许多商品的话，顾客除了购买要买的商品以外还会购买其他商品。因此，出于促销目的也放一些日常用品</p></blockquote> <img src="/2021/08/24/drugstor/薬局2.jpg" style="zoom:80%;"> <h3 id="ドラッグストアの店員はみな薬剤師の資格を持っているのですか"><a href="#ドラッグストアの店員はみな薬剤師の資格を持っているのですか" class="headerlink" title="ドラッグストアの店員はみな薬剤師の資格を持っているのですか"></a>ドラッグストアの店員はみな薬剤師の資格を持っているのですか</h3><p>医師の処方箋（しょほうせん）に基づいて医薬品を提供する薬局では普通店員全員が薬剤師ですが、大型店では資格を持っていない店員もいます。</p><blockquote><p>按照医生的处方配药的药店一般店员都是药剂师，但是在大型店也有没有药剂师资格的店员</p></blockquote> <img src="/2021/08/24/drugstor/images1.jfif" style="zoom:80%;"> <h3 id="ドラッグストアの化粧品（けしょうひん）とデパートなどの化粧品と違いますか"><a href="#ドラッグストアの化粧品（けしょうひん）とデパートなどの化粧品と違いますか" class="headerlink" title="ドラッグストアの化粧品（けしょうひん）とデパートなどの化粧品と違いますか"></a>ドラッグストアの化粧品（けしょうひん）とデパートなどの化粧品と違いますか</h3><p>ドラッグストアで売れている化粧品はリーズナブルで、各種メーカーの製品が豊富（ほうふ）にそろっています。</p><p>また商品棚がオープンなので、気兼ねなく手に取ってみることができ、お試し用のサンプルもあるので、自由に試してみることができます。</p><p>一方デパートの化粧品売り場は、各メーカーごとのブースに分かれ、専門の販売員がお客さんに最適なものを選んでくれます。いずれも高級品ばかりなので、高価です。</p><blockquote><p>药妆店贩卖的化妆品不仅价格合理，而且有不同商家的产品，种类丰富。</p><p>另外，货架上的商品是开架出售，可以随意取看，并试用的小样，自由使用。</p><p>但是百货店按照不同的厂家分立专柜，有专门的美容顾问为顾客选择最佳的化妆品。</p><p>只是，百货店里的化妆品都是高档品牌，价格不菲。</p></blockquote> <img src="/2021/08/24/drugstor/images2.jpg" style="zoom: 80%;"> ]]></content>
      
      
      <categories>
          
          <category> Japan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Japanese culture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桜</title>
      <link href="/2021/08/04/sakula/"/>
      <url>/2021/08/04/sakula/</url>
      
        <content type="html"><![CDATA[<h3 id="日本の国の花は桜ですか"><a href="#日本の国の花は桜ですか" class="headerlink" title="日本の国の花は桜ですか"></a>日本の国の花は桜ですか</h3><p>日本では特に法律で国花を定め（さだめ）てはいませんが、</p><p>広く国民（こくみん）に愛されている桜は国の花と言っていいでしょう。<br>　　また、皇室（こうしつ）の象徴である菊（きく）も国内で日本の国花（こっか）と見られています。</p><blockquote><p>日本的国花是樱花吗？<br>       虽然在日本法律上没有指定为国花，但是一直广受国民喜爱的樱花可以说是日本的国花。<br>       另外，菊花是日本皇室的象征在日本国内也被一直视为是国花</p></blockquote><p><img src="/2021/08/04/sakula/sakura05.png"></p><p><img src="/2021/08/04/sakula/sakura02.png"></p><h3 id="日本人はなぜ桜が好きなのですか"><a href="#日本人はなぜ桜が好きなのですか" class="headerlink" title="日本人はなぜ桜が好きなのですか"></a>日本人はなぜ桜が好きなのですか</h3><p>なんといっても(毕竟,无论怎么说，首先)桜の美しさ（うつくしさ）でしょう。</p><p>桜は春先になると葉（は）より先につぼみをつけ、一定以上の気温になると一斉（いっせい）に開花（かいか）します。</p><p>花の色は近くで見るとほとんど白ですが、離れ（はなれ）てみると淡い（あわい）ピンク色で、桜並木（さくらなみき　行道樱花树）はまるでピンク色の霧（きり）のように幻想（げんそう）的に見えます。</p><p>10日間はどの開花時期を過ぎると、風に吹かれて雪のように花びら（花瓣）が散って（ちらく）いき、あっという間に花がなくなってしまいます。この美しさとはかなさが人を引き付けて(吸引，引诱，诱惑）やまないです</p><blockquote><p>日本人为什么喜欢樱花？<br>最大的理由是樱花是格外美吧。<br>一到初春樱花是先结成花蕾在绿叶发芽之前，到达一定的气温就会一齐绽放。<br>虽然近看的话花的颜色大体是白色的，但是远眺是淡粉色的，沿街的樱花树好像粉色的雾把人带入到梦境。<br>一旦10天左右的花期一过，风一吹好像雪花片片散落，一眨眼花就消散不见了。<br>这样稍纵即逝的美是忍不住吸引人的。</p></blockquote><p><img src="/2021/08/04/sakula/sakura03.png"></p><p><img src="/2021/08/04/sakula/sakura04.png"></p>]]></content>
      
      
      <categories>
          
          <category> Japan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Japanese culture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown的使用方法</title>
      <link href="/2021/07/19/markdown/"/>
      <url>/2021/07/19/markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="Markdown是什么"><a href="#Markdown是什么" class="headerlink" title="Markdown是什么"></a>Markdown是什么</h2><ul><li><p>Markdown 是一种轻量级标记语言，易读易写的纯文本格式编写文档。</p></li><li><p>2004 由约翰·格鲁伯（英语：John Gruber）创建。</p></li><li><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p></li><li><p>Markdown 编写的文档后缀为 <strong>.md</strong>, <strong>.markdown</strong>。</p></li></ul><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><ul><li><p>使用# 来设置标题  （快捷方式设置标题）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><img src="/2021/07/19/markdown/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210627171619759.png" alt="image-20210627171619759" style="zoom: 50%;"><p><strong>重点： #+空格+输入内容</strong></p></li></ul><h2 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h2><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><ul><li><p><strong>加粗</strong>   </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br></pre></td></tr></table></figure></li><li><p>斜体</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br></pre></td></tr></table></figure></li><li><p><em><strong>斜体加粗</strong></em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***斜体加粗***</span><br></pre></td></tr></table></figure></li></ul><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>helloworld  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">段落的末尾两个上的空格以上加上回车，段落后出现一个空行重新出现一个新的段落</span><br></pre></td></tr></table></figure><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><ul><li>用三个以上*  -  建立分隔线  <strong>中间可以出入空格</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">****  </span><br><span class="line">* * * * </span><br><span class="line">----</span><br><span class="line">- - - -</span><br></pre></td></tr></table></figure></li></ul><hr><hr><hr><hr><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><ul><li>使用<u>的标签设置</u></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br></pre></td></tr></table></figure><p><u>下划线</u></p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><ul><li>两端加上两个波浪线 <strong>~~</strong> </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~hello，world~~  </span><br></pre></td></tr></table></figure><p><del>hello，world</del></p><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[^注脚内容]</span><br></pre></td></tr></table></figure><p>hello world</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li><p>1234  有顺序列表标记 （输入数字+ .  + 空格 +回车）</p><ol><li>内容1</li><li>内容2</li><li>内容3</li><li>内容4</li></ol></li><li><p>无序列表 (*) (-) (+ ) + 空格 +回车   </p></li><li><p>列表嵌套   tab键</p></li></ul><ul><li>内容1<ul><li>内容1-1</li></ul></li></ul><h2 id="区块-引用"><a href="#区块-引用" class="headerlink" title="区块  引用"></a>区块  引用</h2><ul><li><p>段落开头使用（&gt;） + 空格  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 内容1</span><br><span class="line">&gt; &gt; 内容2</span><br><span class="line">&gt; &gt; &gt; 内容3</span><br></pre></td></tr></table></figure><blockquote><p>内容1</p><blockquote><p>内容2</p><blockquote><p>内容3</p></blockquote></blockquote></blockquote></li><li><p>引用别人的内容使用 （&gt;）+ 输入内容</p></li></ul><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​```java +回车    可以指定语言</span><br></pre></td></tr></table></figure><p>&lt;img src=”C:\Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210627184001314.png” alt=”image-20210627184001314” style=”zoom: 80%;” /</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><ul><li><p>开头！</p></li><li><p>【  】 图片的解释说明</p></li><li><p>（）图片的地址</p><p>** 可以是本地图片，也可输入图片网址**</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![alt 属性文本](本地图片地址)  本地图片</span><br><span class="line"></span><br><span class="line">![alt 属性文本](图片网址)   网上图片链接地址</span><br></pre></td></tr></table></figure><p> <img src="/2021/07/19/markdown/Users\xuchu\Desktop\ダウンロード.jpg" alt="ダウンロード"></p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/HDicsOGPowWLeicdNJxyH0piaJX463yNrNXdgUDy5ZibBOy1yzuH0J3VO4jYObTQ6LJy9hicI2icm9gaZcjjXzvCd2UQ/640?wx_fmt=jpeg" style="zoom:33%;"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/HDicsOGPowWLeicdNJxyH0piaJX463yNrNXdgUDy5ZibBOy1yzuH0J3VO4jYObTQ6LJy9hicI2icm9gaZcjjXzvCd2UQ/640?wx_fmt=jpeg&quot; style=&quot;zoom:33%;</span><br></pre></td></tr></table></figure><p>超链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[链接名称](链接地址)</span><br></pre></td></tr></table></figure><p><a href="https://www.google.com/">google</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;https://www.google.com/&gt; 或者直接使用链接地址 &lt;输入链接地址&gt;</span><br></pre></td></tr></table></figure><p>&lt;<a href="https://www.google.com/">https://www.google.com/</a></p><p><strong>高级链接</strong></p><ul><li>变量赋值的方法链接网站内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">参考文献 1 作为网址变量 [Google][1]</span><br><span class="line">参考文献2 作为网址变量 [Baidu][2]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  [1]: http://www.google.com/</span><br><span class="line">  [2]: https://www.baidu.com/</span><br></pre></td></tr></table></figure><p>参考文献 1 作为网址变量 <a href="http://www.google.com/">Google</a><br>参考文献 2 作为网址变量 <a href="https://www.baidu.com/">Baidu</a><br>文档的结尾为赋值（网址）</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul><li>使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|name |sex|birthday|</span><br><span class="line">|--|--|--|</span><br><span class="line">|小王|女|18|</span><br><span class="line">|小李|男|21|</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>sex</th><th>birthday</th></tr></thead><tbody><tr><td>小王</td><td>女</td><td>18</td></tr><tr><td>小李</td><td>男</td><td>21</td></tr></tbody></table><p><strong>对齐方式</strong></p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|name |sex|birthday|</span><br><span class="line">|-:--|:-:--|---:|</span><br><span class="line">|小王|女|18|</span><br><span class="line">|小李|男|21|</span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>sex</th><th align="right">birthday</th></tr></thead><tbody><tr><td>小王</td><td>女</td><td align="right">18</td></tr><tr><td>小李</td><td>男</td><td align="right">21</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的使用方法</title>
      <link href="/2021/07/19/hexo/"/>
      <url>/2021/07/19/hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="下载并安装Node-js"><a href="#下载并安装Node-js" class="headerlink" title="下载并安装Node.js"></a>下载并安装Node.js</h3><ul><li>官网下载，选择相应版本</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//nodejs.org/en/download/</span></span><br></pre></td></tr></table></figure><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210627214659156.png" alt="image-20210627214659156" style="zoom:50%;"><ul><li><p>安装后验证   cmd（Win+R）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210627215020257.png" alt="image-20210627215020257"></p></li><li><p>查看npm版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure></li><li><p>安装淘宝的cnpm 管理器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>查看cnpm版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure></li><li><p>环境变量设置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量  系统变量下的path变量，添加Node.js的地址</span><br></pre></td></tr></table></figure></li></ul><h3 id="注册Gitub"><a href="#注册Gitub" class="headerlink" title="注册Gitub"></a>注册Gitub</h3><ul><li><p>官网注册 <strong>Sign up</strong></p><blockquote><p><a href="https://github.com/">https://github.com/</a></p></blockquote></li><li><p>注册成功之后，创建库 (在Github的**+** 选择New repository）</p><p><strong>注意GithubName.github.io</strong> </p><p>Owner必须是你的github的名字</p><p>Repository name必须是.github.io</p><p>如果是其他创建不成功</p><p><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210629070243648.png" alt="image-20210629070243648" style="zoom: 50%;">!(C:\Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210629071605277.png)</p></li></ul><img src="/2021/07/19/hexo/Users\xuchu\Pictures\スクリーンショット 2021-06-29 070716.png" alt="スクリーンショット 2021-06-29 070716" style="zoom:50%;"><h2 id="下载并安装Git"><a href="#下载并安装Git" class="headerlink" title="下载并安装Git"></a>下载并安装Git</h2><ul><li><p>下载地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//git-scm.com/</span></span><br></pre></td></tr></table></figure><p><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210627220920782.png" alt="image-20210627220920782" style="zoom: 33%;"><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210627220903128.png" alt="image-20210627220903128" style="zoom:50%;"></p></li><li><p>安装后验证     桌面点击鼠标右键，选择 <strong>Git Bash Here</strong>打开 或 Cmd (Win+R)  cmd（Win+R）</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">分别输入查是否安装成功   git             git --version    </span><br></pre></td></tr></table></figure><ul><li><p><strong>配置Git用户和邮箱</strong></p><ul><li><p>在桌面点击鼠标右键，点击 <code>Git Bash Here</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name  #gituhub 的注册的用户名 </span><br><span class="line"></span><br><span class="line">git config --global user.xiaowang</span><br><span class="line"></span><br><span class="line">git config --global user.email  #gituhub 的注册的邮箱名</span><br><span class="line"></span><br><span class="line">git config --global user.1234@qq.com</span><br></pre></td></tr></table></figure></li><li><p>查看其他配置(git设置列表)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list  </span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="本地安装hexo"><a href="#本地安装hexo" class="headerlink" title="本地安装hexo"></a>本地安装hexo</h2><ul><li><p>安装hexo框架</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli </span><br></pre></td></tr></table></figure></li><li><p>查看hexo版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v  </span><br></pre></td></tr></table></figure></li><li><p>创建blog目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog </span><br></pre></td></tr></table></figure></li><li><p>进入blog目录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd blog    </span><br></pre></td></tr></table></figure></li><li><p>查看博客下生成的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l</span><br></pre></td></tr></table></figure></li><li><p>生成博客 <strong>初始化博客</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo init  </span><br></pre></td></tr></table></figure></li><li><p>启动本地博客服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s </span><br><span class="line">http://localhost:4000/    # hexo 默认的一篇“Hello World”文章</span><br></pre></td></tr></table></figure><p><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210629082925027.png" alt="image-20210629082925027"></p></li><li><p>创建新的文章 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">&quot;我的第一篇文章&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>返回blog<strong>目录</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ../..</span><br></pre></td></tr></table></figure></li><li><p>清理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br></pre></td></tr></table></figure></li><li><p>生成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>在blog目录下安装git部署插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></li><li><p>补充</p><p>![image-20210629084535091](C:\Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210629084535091.png</p><p><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210629084603286.png" alt="image-20210629084603286"></p></li></ul><h2 id="博客发布到Github"><a href="#博客发布到Github" class="headerlink" title="博客发布到Github"></a>博客发布到Github</h2><ul><li><p>在项目根目录下，安装发布的插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save- </span><br></pre></td></tr></table></figure></li><li><p>修改项目配置文件：**_config.yml**</p></li></ul><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210629074432459.png" alt="image-20210629074432459" style="zoom: 67%;"><p><strong>注意在type ： 之后有一个空格</strong></p><ul><li><p>部署到Github仓库里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d </span><br></pre></td></tr></table></figure></li><li><p>访问这个地址可以查看博客</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://YourGithubName.github.io/ </span><br></pre></td></tr></table></figure><p><strong>文章Github上发布成功，不是在本地的网站</strong></p></li></ul><h2 id="hexo博客主题安装"><a href="#hexo博客主题安装" class="headerlink" title="hexo博客主题安装"></a>hexo博客主题安装</h2><ul><li>打开主题</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><ul><li><p>安装主题</p><ul><li>themes/yilia 下载yilia主题到本地</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git </span><br></pre></td></tr></table></figure><ul><li><p>修改hexo根目录下的 _config.yml 文件 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: yilia</span><br></pre></td></tr></table></figure></li><li><p>清理一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br></pre></td></tr></table></figure></li><li><p>生成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></li><li><p>启动本地服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>部署到远程Github仓库  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo-d</span><br><span class="line">https://YourGithubName.github.io/</span><br></pre></td></tr></table></figure></li></ul><h2 id="文章发布流程"><a href="#文章发布流程" class="headerlink" title="文章发布流程"></a>文章发布流程</h2><ul><li><p>博客的根目录 /source/_posts 目录下，创建一个.md 文件进行编写</p></li><li><p>文件的顶部添加下面内容，主要写 title 就好了，其他可省略</p><p><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210629091812978.png" alt="image-20210629091812978"></p></li><li><p>使用 <strong>hexo g –d</strong> 推送</p></li></ul><p> <strong>或者</strong></p><p><img src="/2021/07/19/hexo/Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210627220425254.png" alt="image-20210627220425254"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>如果有不理解的小伙伴，可以看一下<a href="https://www.bilibili.com/video/BV1Yb411a7ty?from=search&seid=10602935136011786863">Codesheep</a>的视频，讲解比较详细，希望能够对你的博客搭建有帮助！</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的使用方法</title>
      <link href="/2021/07/19/git/"/>
      <url>/2021/07/19/git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="git是什么"><a href="#git是什么" class="headerlink" title="git是什么"></a>git是什么</h2><p>Git 是开源的分布式版本控制系统，主要是用于敏捷高效地处理任何或小或大的项目。</p><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><p>版本控制（Revision control）是一种在开发的过程中用于管理文件、目录或工程等内 的修改历史</p><p>方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。</p><p><strong>特点：</strong></p><p>多人协作，记录跟踪历史记录，代码的安全和整合性等</p><p><strong>常见的版本控制工具：</strong></p><ul><li><strong>Git</strong></li><li><strong>SVN</strong>（Subversion）</li><li><strong>CVS</strong>（Concurrent Versions System）</li><li><strong>VSS</strong>（Micorosoft Visual SourceSafe）</li><li><strong>TFS</strong>（Team Foundation Server）</li><li>Visual Studio Online</li></ul><p><strong>本版控制分类</strong></p><ul><li>本地版本控制—适用个人，每个版本做一个快照</li><li>集中版本控制 SVN<ul><li>所有版本数据在服务器上，从服务器上同步更新上传修改的代码</li><li>缺点–不连网，无法切换版本，所有版本在服务器上一旦服务器损坏，将丢失所有数据</li></ul></li><li>分布式版本控制 Git<ul><li>本地查看所有代码，离线可提交</li><li>缺点–在本地拥有所有版本的代码，有安全隐患</li></ul></li></ul><h2 id="Git环境配置"><a href="#Git环境配置" class="headerlink" title="Git环境配置"></a>Git环境配置</h2><p>打开<a href="https://git-scm.com/">git官网</a></p><p>下载git对应的系统版本</p><img src="/2021/07/19/git/Users\xuchu\Desktop\图片\image-20210627220903128.png" alt="image-20210627220903128" style="zoom:50%;"><ul><li>启动Git</li></ul><img src="/2021/07/19/git/Users\xuchu\Desktop\图片\image-20210704145428357.png" alt="image-20210704145428357" style="zoom: 67%;"><p><strong>Git  GUI ，Git Bash， Git CMD 的区别</strong></p><ol><li><strong>Git GUI</strong>–图形界面的git </li><li><strong>Git Bash</strong>–Unix与Linux风格的命令行</li><li><strong>Git CMD</strong>–windows风格的命令行</li></ol><h2 id="Git基本内容"><a href="#Git基本内容" class="headerlink" title="Git基本内容"></a>Git基本内容</h2><h3 id="常用的Linux命令"><a href="#常用的Linux命令" class="headerlink" title="常用的Linux命令"></a>常用的Linux命令</h3><ol><li><p>#表示注释</p></li><li><p>cd: 用来改变目录。</p></li><li><p>cd . . :回退到上一个目录，直接cd进入默认目录</p></li><li><p>cd . . /.. :回退到上的两个目录</p></li><li><p>pwd : 显示当前所在的目录路径。</p></li><li><p>ls(ll): 列出当前目录中的所有文件，ll列出的内容更为详细。</p></li><li><p>ls -a: 列出当前目录中的所有文件,包括隐藏文件。</p></li><li><p>touch : 新建一个文件 如 touch hello.txt 就会在当前目录下新建一个hello.txt 文件。 </p></li><li><p>rm: 删除一个文件, rm hello.txt 就会把hello.txt文件删除。 </p></li><li><p>mkdir: 新建一个目录,就是新建一个文件夹。</p></li><li><p>rm -r : 删除一个文件夹, rm -r src 删除src目录 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf / 在Linux中尽量不要使用，会删除电脑中全部文件</span><br></pre></td></tr></table></figure></li><li><p>mv 移动文件, mv hello.txt src hello.txt 是要移动的文件, src 是目标文件夹,必须保证文件和目标文件夹在同一目录下。 </p></li><li><p>reset 重新初始化终端/清屏。</p></li><li><p>clear 清屏。</p></li><li><p>history 查看命令历史。 </p></li><li><p>help 帮助。 </p></li><li><p>exit 退出。</p></li></ol><h3 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h3><ul><li><p><strong>查看配置文件</strong></p><ul><li><p>查看配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></table></figure></li><li><p>查看系统配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --system --list</span><br></pre></td></tr></table></figure></li><li><p>查看当前用户配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>查看相关的配置文件</strong></p><ul><li><p>system 系统级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Git\etc\gitconfig ：Git 安装目录下的 gitconfig </span><br></pre></td></tr></table></figure><img src="/2021/07/19/git/Users\xuchu\Desktop\图片\image-20210704161548719.png" alt="image-20210704161548719" style="zoom:50%;"></li><li><p>global全局</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\ .gitconfig 只适用于当前登录用户的配置</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>设置用户名和邮箱</strong></p><p>安装git后，需要设置用户名和邮箱地址，git内容的提交需要用户名和邮箱地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;gitgit&quot; #名称</span><br><span class="line">git config --global user.email 123456@qq.com #邮箱</span><br></pre></td></tr></table></figure></li></ul><h2 id="Git的理论知识"><a href="#Git的理论知识" class="headerlink" title="Git的理论知识"></a>Git的理论知识</h2><h3 id="Git的三个工作区域和一个远程仓库"><a href="#Git的三个工作区域和一个远程仓库" class="headerlink" title="Git的三个工作区域和一个远程仓库"></a>Git的三个工作区域和一个远程仓库</h3><p><strong>1.工作目录（Working Directory）</strong>—存放代码操作修改的地方</p><p><strong>2.暂存区(Stage/Index)</strong>–临时存放修改的文件，保存即将提交的的文件</p><p><strong>3.资源库 (Repository或Git Directory)</strong>–仓库区，安全存放数据的位置，包括所有提交的版本数据 。<strong>HEAD</strong>是更新后的最新的版本</p><p><strong>4.Remote：</strong>远程仓库，托管代码的服务器，用于远 程数据交换</p><img src="/2021/07/19/git/Users\xuchu\Desktop\图片\image-20210704152306387.png" alt="image-20210704152306387" style="zoom:50%;"><p><strong>三个区域确切的说应该是git仓库中HEAD指向的版本：</strong></p><ul><li>Directory：使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。</li><li>WorkSpace：需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间。</li><li>.git：存放Git管理信息的目录，初始化仓库的时候自动创建。</li><li>Index/Stage：暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。</li><li>Local Repo：本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。</li><li>Stash：隐藏，是一个工作状态保存栈，用于保存/恢复WorkSpace中的临时状态</li></ul><p><img src="/2021/07/19/git/Users\xuchu\Desktop\图片\image-20210704155210835.png" alt="image-20210704155210835"></p><p><img src="/2021/07/19/git/Users\xuchu\Desktop\图片\image-20210704154830032.png" alt="image-20210704154830032"></p><p>git的工作流程一般是这样的：</p><p>１、在工作目录中添加、修改文件；</p><p>２、将需要进行版本管理的文件放入暂存区域；</p><p>３、将暂存区域的文件提交到git仓库。</p><p>因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)</p><p><img src="/2021/07/19/git/Users\xuchu\Desktop\图片\image-20210704154700237.png"></p><h2 id="Git项目搭建"><a href="#Git项目搭建" class="headerlink" title="Git项目搭建"></a>Git项目搭建</h2><p>工作目录（WorkSpace)用Git帮助你管理的文件夹</p><p>日常使用只要记住下图6个命令：</p><p><img src="/2021/07/19/git/Users\xuchu\Desktop\图片\image-20210704162126552.png" alt="image-20210704162126552"></p><h3 id="本地仓库搭建"><a href="#本地仓库搭建" class="headerlink" title="本地仓库搭建"></a><strong>本地仓库搭建</strong></h3><ul><li><p>创建全新的仓库</p><p>在git管理项目的根目录下执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure></li><li><p>克隆远程仓库</p><p>将远程的服务器上的仓库备份到本地进行操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone [url]  # https://gitee.com/....</span><br></pre></td></tr></table></figure></li></ul><h3 id="提交和修改"><a href="#提交和修改" class="headerlink" title="提交和修改"></a><strong>提交和修改</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git add添加文件到仓库</span><br><span class="line">git status查看仓库当前的状态，显示有变更的文件。</span><br><span class="line">git diff比较文件的不同，即暂存区和工作区的差异。</span><br><span class="line">git commit提交暂存区到本地仓库。</span><br><span class="line">git reset回退版本。</span><br><span class="line">git rm删除工作区文件。</span><br><span class="line">git mv移动或重命名工作区文件。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="提交日志"><a href="#提交日志" class="headerlink" title="提交日志"></a><strong>提交日志</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log查看历史提交记录</span><br><span class="line">git blame &lt;file&gt;以列表形式查看指定文件的历史修改记录</span><br></pre></td></tr></table></figure><h3 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git remote远程仓库操作</span><br><span class="line">git fetch从远程获取代码库</span><br><span class="line">git pull下载远程代码并合并</span><br><span class="line">git push上传远程代码并合并</span><br></pre></td></tr></table></figure><h2 id="Git文本操作"><a href="#Git文本操作" class="headerlink" title="Git文本操作"></a>Git文本操作</h2><p><strong>文件的四种状态</strong></p><ul><li>Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.</li><li>Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. </li><li>Modified: 文件已修改</li><li>Staged: 暂存状态. 执行git commit则将修改同步到库中,</li></ul><p><strong>查看文件的状态</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看指定文件状态git status [filename]</span><br><span class="line">#查看所有文件状态git status</span><br><span class="line"># git add .                  添加所有文件到暂存区</span><br><span class="line"># git commit -m &quot;消息内容&quot;    提交暂存区中的内容到本地仓库 -m 提交信息</span><br></pre></td></tr></table></figure><p><strong>忽略文件</strong></p><ol><li><p>忽略文件中的空行或以井号（#）开始的行将会被忽略。</p></li><li><p>可以使用Linux通配符。</p><p>星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</p></li><li><p>文件名称前有感叹号（!），表示例外规则，将不被忽略。</p></li><li><p>文件名称最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</p></li><li><p>如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*.txt        #忽略所有 .txt结尾的文件</span><br><span class="line">!aaa.txt     #aaa.txt除外</span><br><span class="line">/temp        #仅忽略项目根目录下文件,不包括目录temp文件下的内容</span><br><span class="line">build/       #忽略build/目录下的所有文件</span><br><span class="line">doc/*.txt    #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2><p><strong>Git分支中常用的指令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有本地分支git branch</span><br><span class="line"># 列出所有远程分支git branch -r</span><br><span class="line"># 新建一个分支，但依然停留在当前分支git branch [branch-name]</span><br><span class="line"># 新建一个分支，并切换到该分支git checkout -b [branch]</span><br><span class="line"># 合并指定分支到当前分支$ git merge [branch]</span><br><span class="line"># 删除分支$ git branch -d [branch-name]</span><br><span class="line"># 删除远程分支$ git push origin --delete [branch-name]$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title></a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux的基本内容</title>
      <link href="/2021/07/19/linux/"/>
      <url>/2021/07/19/linux/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux概述"><a href="#Linux概述" class="headerlink" title="Linux概述"></a>Linux概述</h2><p>Linux 是一种自由和开放源码的类 UNIX 操作系统。</p><p>Linux 英文解释为 <strong>Linux is not Unix</strong>。</p><p>Linux 是在 1991 由林纳斯·托瓦兹在赫尔辛基大学上学时创立的，主要受到 Minix 和 Unix 思想的启发。</p><p>任何个人和机构都可以自由地使用 Linux 的所有底层源代码，也可以自由地修改和再发布。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><img src="/2021/07/19/linux/Users\xuchu\Desktop\图片\wx2k9g7Hte.png" alt="wx2k9g7Hte"></p><p>比较而言，Ubuntu的安装相对比较容易,关于Ubuntu的安装之后会在下一个内容进行介绍<br>如果想具体了解CentOS的安装，可以点击<a href="https://www.runoob.com/linux/linux-install.html">CentOS的安装教程</a></p><p>如果想具体了解云服务的使用，可以点击<a href="https://www.runoob.com/linux/linux-cloud-server.html">云服务器的使用教程</a></p><h2 id="Linux-VS-Windows"><a href="#Linux-VS-Windows" class="headerlink" title="Linux VS Windows"></a>Linux VS Windows</h2><p>Linux 更多的是应用于服务器上，而桌面操作系统更多使用的是 Windows。</p><p><img src="/2021/07/19/linux/Users\xuchu\Desktop\图片\image-20210707102234596.png" alt="image-20210707102234596"></p><h2 id="Linux启动过程"><a href="#Linux启动过程" class="headerlink" title="Linux启动过程"></a>Linux启动过程</h2><h3 id="开机登录"><a href="#开机登录" class="headerlink" title="开机登录"></a>开机登录</h3><ul><li><p>Linux启动过程分为5个阶段</p><ul><li><p>内核的引导。</p><ul><li><p>计算机打开电源后，首先是BIOS开机自检，按照BIOS中设置的启动设备（通常是硬盘）来启动。</p><p>操作系统接管硬件以后，首先读入 /boot 目录下的内核文件。</p></li><li><p>操作系统–&gt;/boot</p></li></ul></li><li><p>运行 init。</p><ul><li>init 进程是系统所有进程的起点</li><li>操作系统–&gt;/boot–&gt;init 进程</li></ul></li><li><p>运行级别</p><ul><li>在开机启动程序中，windows叫做服务（service）</li><li>Linux就叫做”守护进 程”（daemon）</li><li>init进程的一大任务，运行开机启动的程序。Linux允许为不同的场合，分配不同的开机启动程序，这就叫做”运行级别”（runlevel）。</li><li>Linux系统有7个运行级别(runlevel)：<ul><li>运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动</li><li>运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆</li><li>运行级别2：多用户状态(没有NFS)</li><li>运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式</li><li>运行级别4：系统未使用，保留</li><li>运行级别5：X11控制台，登陆后进入图形GUI模式</li><li>运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</li></ul></li><li>操作系统–&gt;/boot–&gt;init 进程–&gt;运行级别</li></ul></li><li><p>系统初始化。</p><ul><li><p>在init的配置文件中有这么一行： si::sysinit:/etc/rc.d/rc.sysinit　它调用执行了/etc/rc.d/rc.sysinit，而rc.sysinit是一个bash shell的脚本，它主要是完成一些系统初始化的工作，rc.sysinit是每一个运行级别都要首先运行的重要脚本。</p><p>它主要完成的工作有：激活交换分区，检查磁盘，加载硬件模块以及其它一些需要优先执行任务。</p></li><li><p>操作系统–&gt;/boot–&gt;init 进程–&gt;运行级别–&gt;系统初始化</p></li></ul></li><li><p>建立终端 。</p><ul><li><p>rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。</p><p>init接下来会打开6个终端，以便用户登录系统。</p><ul><li>操作系统–&gt;/boot–&gt;init 进程–&gt;运行级别–&gt;系统初始化–&gt;建立终端（/etc/init.d）</li></ul></li></ul></li><li><p>用户登录系统。</p><ul><li>用户登录的方式有三种(其中，最高权限是root账号，可以操作一切)<ul><li>命令行登录 </li><li>ssh登录 </li><li>图形界面登录</li></ul></li><li>操作系统–&gt;/boot–&gt;init 进程–&gt;运行级别–&gt;系统初始化–&gt;建立终端（/etc/init.d）–&gt;用户登录系统</li></ul></li></ul></li></ul><p><strong>使用ubuntu的请注意</strong></p><ul><li><p>创建新的文件或新的文件夹,或者修改文件时候无法保存等问题，可能是因为权限不够</p><p>这个时候需要使用超级用户才可以</p><p>命令： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su #转为超级用户</span><br></pre></td></tr></table></figure></li></ul><h3 id="Linux关机"><a href="#Linux关机" class="headerlink" title="Linux关机"></a>Linux关机</h3><ul><li><p>在linux领域内大多用在服务器上，很少遇到关机的操作。毕竟服务器上跑一个服务是永无止境的，除非特殊情况下，不得已才会关机</p></li><li><p>关机指令为：shutdown </p><p>以下关于具体的一些关机操作，如果想具体了解可以去查看相关的文档</p><ul><li>```<br>shutdown –h now 立马关机<br>shutdown –h 20:25 系统会在今天20:25关机<br>shutdown –h +10 十分钟后关机<br>shutdown –r now 系统立马重启<br>shutdown –r +10 系统十分钟后重启<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">##  系统目录</span><br><span class="line"></span><br><span class="line">登录系统后，在当前命令窗口下输入命令,可以显示目录的结构，方便我们对目录内容进行理解</span><br><span class="line"></span><br></pre></td></tr></table></figure>ls / <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20210707105539327](C:\Users\xuchu\Desktop\图片\image-20210707105539327.png)</span><br><span class="line"></span><br><span class="line">### 目录内容的解释</span><br><span class="line"></span><br></pre></td></tr></table></figure>/bin：<br>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</li></ul></li></ul><p>/boot：<br>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</p><p>/dev ：<br>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</p><p>/etc：<br>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</p><p>/home：<br>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</p><p>/lib：<br>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</p><p>/lost+found：<br>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</p><p>/media：<br>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</p><p>/mnt：<br>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 /mnt/ 上，然后进入该目录就可以查看光驱里的内容了。</p><p>/opt：<br>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</p><p>/proc：<br>proc 是 Processes(进程) 的缩写，/proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：</p><p>echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all<br>/root：<br>该目录为系统管理员，也称作超级权限者的用户主目录。</p><p>/sbin：<br>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。</p><p>/selinux：<br> 这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</p><p>/srv：<br> 该目录存放一些服务启动之后需要提取的数据。</p><p>/sys：</p><p>这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。</p><p>sysfs 文件系统集成了下面3种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。</p><p>该文件系统是内核设备树的一个直观反映。</p><p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p><p>/tmp：<br>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</p><p>/usr：<br> usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</p><p>/usr/bin：<br>系统用户使用的应用程序。</p><p>/usr/sbin：<br>超级用户使用的比较高级的管理程序和系统守护程序。</p><p>/usr/src：<br>内核源代码默认的放置目录。</p><p>/var：<br>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p><p>/run：<br>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 基本命令</span><br><span class="line"></span><br><span class="line">### 目录管理</span><br><span class="line"></span><br><span class="line">Linux的目录结构为树状结构，最顶级的目录为根目录 /。</span><br><span class="line"></span><br><span class="line">- 相对路径</span><br><span class="line"></span><br><span class="line">  - 不是由 **/**  写起    /usr/content/file 要到 /usr/content/picture 底下时，可以写成： **cd ../picture** 这就是相对路径的写法。</span><br><span class="line"></span><br><span class="line">- 绝对路径</span><br><span class="line"></span><br><span class="line">  - 就是从根目录下写起    /usr/content/file</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">处理目录的指令</span><br><span class="line"></span><br><span class="line">- ls（英文全拼：list files）: 列出目录及文件名</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>  -a ：全部的文件，连同隐藏文件( 开头为 . 的文件) 一起列出来(常用)  -d ：仅列出目录本身，而不是列出目录内的文件数据(常用)  -l ：长数据串列出，包含文件的属性与权限等等数据；(常用)</code></pre>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">- cd（英文全拼：change directory）：切换目录   </span><br><span class="line"></span><br><span class="line">  cd [相对路径或绝对路径]</span><br><span class="line"></span><br><span class="line">- pwd（英文全拼：print work directory）：显示目前的目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  -P ：显示出确实的路径，而非使用连结 (link) 路径。<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">- mkdir（英文全拼：make directory）：创建一个新的目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>     -m ：配置文件的权限！直接配置，不需要看默认权限<br>      -p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">- rmdir（英文全拼：remove directory）：删除一个空的目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>  -p ：连同上一级『空的』目录也一起删除<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><br>  ..@DESKTOP-EB57470 MINGW64 /d/study<br>  $ mkdir -p t1/t2/t3<br>  ..@DESKTOP-EB57470 MINGW64 /d/study<br>  $<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  ![image-20210707115557915](C:\Users\xuchu\AppData\Roaming\Typora\typora-user-images\image-20210707115557915.png)</span><br><span class="line"></span><br><span class="line">- rmdir（英文全拼：remove directory）：删除一个空的目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>  -p ：连同上一级『空的』目录也一起删除<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><br>   ..@DESKTOP-EB57470 MINGW64 /d/study/test1/test2<br>     $ cd ../..<br>   ..@DESKTOP-EB57470 MINGW64 /d/study<br>     $ rmdir -p t1/t2/t3<br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- cp（英文全拼：copy file）: 复制文件或目录</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><ul><li>[root@www ~]# cp [-adfilprsu] 来源档(source) 目标档(destination)</li></ul><p>  cp（英文全拼：copy file）: 复制文件或目录<br>      [root@www ~]# cp [-adfilprsu] 来源档(source) 目标档(destination)</p><pre><code>  -a：相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)  -d：若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；  -f：为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；  -i：若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)  -l：进行硬式连结(hard link)的连结档创建，而非复制文件本身；  -p：连同文件的属性一起复制过去，而非使用默认属性(备份常用)；  -r：递归持续复制，用於目录的复制行为；(常用)  -s：复制成为符号连结档 (symbolic link)，亦即『捷径』文件；  -u：若 destination 比 source 旧才升级 destination ！</code></pre>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">- ​rm（英文全拼：remove）: 删除文件或目录</span><br><span class="line">  ​rm [-fir] 文件或目录</span><br><span class="line"></span><br><span class="line">  -f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</span><br><span class="line">  -i ：互动模式，在删除前会询问使用者是否动作</span><br><span class="line">  -r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</span><br><span class="line"></span><br><span class="line">- mv（英文全拼：move file）: 移动文件与目录，或修改文件与目录的名称</span><br><span class="line"></span><br><span class="line">  #可以使用 man [命令] 来查看各个命令的使用文档，如 ：man cp。</span><br><span class="line"></span><br><span class="line">### 文件内容查看</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Linux系统中使用以下命令来查看文件的内容：</p><p>cat  由第一行开始显示文件内容<br>tac  从最后一行开始显示，可以看出 tac 是 cat 的倒着写！<br>nl   显示的时候，顺道输出行号！<br>more 一页一页的显示文件内容<br>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！<br>head 只看头几行<br>tail 只看尾巴几行<br>可以使用 man [命令]来查看各个命令的使用文档，如 ：man cp。</p><pre><code></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
